<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<!--
# Copyright (c) 2009, 2011 Wind River Systems, Inc. and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
# Doug Schaefer   (Wind River)     - initial API and implementation 
# Anna Dushistova (Mentor Graphics)- [329531][crossgcc] crossgcc fails to build a project
-->
<plugin>

   <extension
         point="org.eclipse.cdt.managedbuilder.core.buildDefinitions">
      <managedBuildRevision
            fileVersion="4.0.0">
      </managedBuildRevision>
      <toolChain
            archList="all"
            configurationEnvironmentSupplier="cdt.ghs.managedMake.GHSEnvironmentVariableSupplier"
            configurationMacroSupplier="cdt.ghs.managedMake.ConfigurationBuildMacroSupplier"
            id="cdt.ghs.managedbuild.toolchain.base"
            isAbstract="false"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;cdt.ghs.build.GHSBuiltinSpecsDetector"
            name="%toolChain.name"
            osList="all"
            targetTool="cdt.ghs.managedbuild.tool.c.linker;cdt.ghs.managedbuild.tool.cpp.linker;cdt.ghs.managedbuild.tool.archiver">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.ELF"
               id="cdt.ghs.managedbuild.targetPlatform"
               isAbstract="false"
               osList="all">
         </targetPlatform>
         <builder
               id="cdt.ghs.managedbuild.builder"
               superClass="cdt.managedbuild.target.gnu.builder">
         </builder>
         <optionCategory
               id="cdt.ghs.managedbuild.optionCategory.settings"
               name="%optionCategory.name">
         </optionCategory>
         <option
               browseType="directory"
               category="cdt.ghs.managedbuild.optionCategory.settings"
               id="cdt.ghs.managedbuild.option.path"
               isAbstract="false"
               name="%option.path"
               resourceFilter="all"
               valueType="string">
         </option>
         <optionCategory
               id="cdt.ghs.managedbuild.optionCategory.processorOptions"
               name="Processor Options">
         </optionCategory>
         <option
               category="cdt.ghs.managedbuild.optionCategory.processorOptions"
               id="cdt.ghs.managedbuild.option.processorFamily"
               isAbstract="false"
               name="Processor Family"
               resourceFilter="all"
               valueType="enumerated">
                        <enumeratedOptionValue command="" isDefault="true" name="(not set)"
                          id="cdt.ghs.managedbuild.option.processorFamily.not_set"/>
                        <enumeratedOptionValue command="-cpu=v850e" isDefault="false" name="V850E1/V850ES(-cpu=v850e)"
                          id="cdt.ghs.managedbuild.option.processorFamily.v850e1_v850es"/>
                        <enumeratedOptionValue command="-cpu=v850e2" isDefault="false" name="V850E2(-cpu=v850e2)"
                          id="cdt.ghs.managedbuild.option.processorFamily.v850e2"/>
                        <enumeratedOptionValue command="-cpu=v850" isDefault="false" name="V850(-cpu=v850)"
                          id="cdt.ghs.managedbuild.option.processorFamily.v850"/>
                        <enumeratedOptionValue command="-cpu=v850e1f" isDefault="false" name="V850E1F(-cpu=v850e1f)"
                          id="cdt.ghs.managedbuild.option.processorFamily.v850e1f"/>
                        <enumeratedOptionValue command="-cpu=v850e2r" isDefault="false" name="V850E2R(-cpu=v850e2r)"
                          id="cdt.ghs.managedbuild.option.processorFamily.v850e2r"/>
                        <enumeratedOptionValue command="-cpu=v850e2rv3" isDefault="false" name="V850E2RV3(-cpu=v850e2rv3)"
                          id="cdt.ghs.managedbuild.option.processorFamily.v850e2rv3"/>
                        <enumeratedOptionValue command="-cpu=v850e2v3" isDefault="false" name="V850E2V3(-cpu=v850e2v3)"
                          id="cdt.ghs.managedbuild.option.processorFamily.v850e2v3"/>
         </option>
         <option
               category="cdt.ghs.managedbuild.optionCategory.processorOptions"
               id="cdt.ghs.managedMake.option.floating_point_coprocessor"
               isAbstract="false"
               name="Floating Point coprocessor"
               resourceFilter="all"
               valueType="enumerated">
                        <enumeratedOptionValue command="" isDefault="true" name="(not set)"
                          id="cdt.ghs.managedMake.option.floating_point_coprocessor.not_set"/>
                        <enumeratedOptionValue command="-fnone" isDefault="false" name="No Floating-Point(-fnone)"
                          id="cdt.ghs.managedMake.option.floating_point_coprocessor.no_floating_point"/>
                        <enumeratedOptionValue command="-fhard" isDefault="false" name="Hardware Coprocessor(-fhard)"
                          id="cdt.ghs.managedMake.option.floating_point_coprocessor.hardware_coprocessor"/>
                        <enumeratedOptionValue command="-fpu=vfp" isDefault="false" name="Hardware Coprocessor 2(-fpu=vfp)"
                          id="cdt.ghs.managedMake.option.floating_point_coprocessor.hardware_coprocessor_2"/>
                        <enumeratedOptionValue command="-fsingle" isDefault="false" name="Hardware Single, Software Double(-fsingle)"
                          id="cdt.ghs.managedMake.option.floating_point_coprocessor.hardware_single_software_double"/>
                        <enumeratedOptionValue command="-fsoft" isDefault="false" name="Software Emulation(-fsoft)"
                          id="cdt.ghs.managedMake.option.floating_point_coprocessor.software_emulation"/>
         </option>
         <tool
               command="ccv850e"
               commandLineGenerator="cdt.ghs.managedMake.GHSCommandLineGenerator"
               commandLinePattern="${COMMAND} ${toolchain_flags} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}"
               errorParsers="cdt.ghs.managedMake.GHSCompilerErrorParser"
               id="cdt.ghs.managedbuild.tool.c.compiler"
               isAbstract="false"
               name="%tool.gcc.compiler"
               natureFilter="both"
               outputFlag="-c -o">
                           <supportedProperties>
            <property id="org.eclipse.cdt.build.core.buildType">
	            <value id="org.eclipse.cdt.build.core.buildType.debug"/>
    	        <value id="org.eclipse.cdt.build.core.buildType.release"/>
            </property>
            </supportedProperties>
         <envVarBuildPath 
         	pathType="buildpathInclude"
         	variableList="CPATH,C_INCLUDE_PATH">
         </envVarBuildPath>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.c.compiler"
			  name="%OptionCategory.Dialect"
			  id="ghs.c.compiler.category.dialect">
		  </optionCategory>
		  <option
			  category="ghs.c.compiler.category.dialect"
			  defaultValue="false"
			  id="ghs.c.compiler.option.dialect.std"
			  name="%Option.Posix.Dialect"
			  useByScannerDiscovery="true"
			  valueType="enumerated">
       <enumeratedOptionValue
             command=""
             id="ghs.c.compiler.dialect.default"
             name="%Option.Posix.Dialect.default">
       </enumeratedOptionValue>
			  <enumeratedOptionValue
					  name="%Option.Posix.Dialect.c90"
					  command="-std=c90"
					  id="ghs.c.compiler.dialect.c90">
			  </enumeratedOptionValue>
			  <enumeratedOptionValue
					  name="%Option.Posix.Dialect.c99"
					  command="-std=c99"
					  id="ghs.c.compiler.dialect.c99">
			  </enumeratedOptionValue>
			  <enumeratedOptionValue
					  name="%Option.Posix.Dialect.c11"
					  command="-std=c11"
					  id="ghs.c.compiler.dialect.c11">
			  </enumeratedOptionValue>
		  </option>
		  <option
			  name="%Option.Posix.Dialect.Flags"
			  category="ghs.c.compiler.category.dialect"
			  id="ghs.c.compiler.option.dialect.flags"
			  useByScannerDiscovery="true"
			  valueType="string">
		  </option>
		  <optionCategory
		      owner="cdt.ghs.managedbuild.tool.c.compiler"
			  name="%OptionCategory.Preproc"
			  id="ghs.c.compiler.category.preprocessor">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Nostdinc"
			  category="ghs.c.compiler.category.preprocessor"
			  command="-nostdinc"
			  id="ghs.c.compiler.option.preprocessor.nostdinc"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.PreprocOnly"
			  category="ghs.c.compiler.category.preprocessor"
			  command="-E"
			  id="ghs.c.compiler.option.preprocessor.preprocess"
			  valueType="boolean">
		  </option>
		  <option
			  name="%Option.Posix.DefSym"
			  category="ghs.c.compiler.category.preprocessor"
			  command="-D"
			  id="ghs.c.compiler.option.preprocessor.def.symbols"
			  valueType="definedSymbols">
		  </option>
		  <option
			  name="%Option.Posix.UndefSym"
			  category="ghs.c.compiler.category.preprocessor"
			  command="-U"
			  id="ghs.c.compiler.option.preprocessor.undef.symbol"
			  valueType="undefDefinedSymbols">
		  </option>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.c.compiler"
			  name="%OptionCategory.Dirs"
			  id="ghs.c.compiler.category.dirs">
		  </optionCategory>
		  <option
			  name="%Option.Posix.InclPaths"
			  category="ghs.c.compiler.category.dirs"
			  command="-I"
			  id="ghs.c.compiler.option.include.paths"
			  valueType="includePath"
			  browseType="directory">
		  </option>
	      <option
	          browseType="file"
	          category="ghs.c.compiler.category.dirs"
	          command="-include"
	          id="ghs.c.compiler.option.include.files"
	          name="%Option.Posix.InclFiles"
	          valueType="includeFiles">
		  </option>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.c.compiler"
			  name="%OptionCategory.Optimize"
			  id="ghs.c.compiler.category.optimization">
		  </optionCategory>
		  <option
			  name="%Option.Posix.OptLevel"
			  category="ghs.c.compiler.category.optimization"
			  id="ghs.c.compiler.option.optimization.level"
			  valueType="enumerated">
              <enumeratedOptionValue
                    id="ghs.c.optimization.level.default"
                    name="%Option.Posix.Optimize.Default">
              </enumeratedOptionValue>
		  <enumeratedOptionValue
		  		  name="%Option.Posix.Optimize.None"
				  command="-Onone"
				  id="ghs.c.optimization.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="%Option.Posix.Optimize.Speed"
				  command="-Ospeed"
				  id="ghs.c.optimization.level.speed">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="%Option.Posix.Optimize.Size"
				  command="-Osize"
				  id="ghs.c.optimization.level.size">
		  </enumeratedOptionValue>
		      <enablement 
              	type="CONTAINER_ATTRIBUTE" 
              	attribute="defaultValue" 
              	value="ghs.c.optimization.level.speed"
              	extensionAdjustment="false">
			  	<checkBuildProperty 
			  		property="org.eclipse.cdt.build.core.buildType"
			  		value="org.eclipse.cdt.build.core.buildType.release"/>
			  </enablement>
              <enablement 
              	type="CONTAINER_ATTRIBUTE" 
              	attribute="defaultValue" 
              	value="ghs.c.optimization.level.none"
              	extensionAdjustment="false">
			  	<checkBuildProperty 
			  		property="org.eclipse.cdt.build.core.buildType"
			  		value="org.eclipse.cdt.build.core.buildType.debug"/>
			  </enablement>
		  
		  </option>
		  <option
			  name="%Option.Posix.Optimize.Flags"
			  category="ghs.c.compiler.category.optimization"
			  id="ghs.c.compiler.option.optimization.flags"
			  valueType="string">
		  </option>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.c.compiler"
			  name="%OptionCategory.Debug"
			  id="ghs.c.compiler.category.debug">
		  </optionCategory>
		  <option
			  name="%Option.Posix.DebugLevel"
			  category="ghs.c.compiler.category.debug"
			  id="ghs.c.compiler.option.debugging.level"
			  valueType="enumerated">
		  <enumeratedOptionValue
				  name="%Option.Posix.Debug.None"
				  isDefault="false"
				  id="ghs.c.debugging.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="%Option.Posix.Debug.Min"
				  command="-g"
				  id="ghs.c.debugging.level.minimal">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="%Option.Posix.Debug.Def"
				  isDefault="true"
				  command="--no_debug"
				  id="ghs.c.debugging.level.default">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="%Option.Posix.Debug.Max"
				  isDefault="false"
				  command="-G"
				  id="ghs.c.debugging.level.max">
		  </enumeratedOptionValue>
		      <enablement 
              	type="CONTAINER_ATTRIBUTE" 
              	attribute="value" 
              	value="ghs.c.debugging.level.none"
              	extensionAdjustment="false">
			  	<checkBuildProperty 
			  		property="org.eclipse.cdt.build.core.buildType"
			  		value="org.eclipse.cdt.build.core.buildType.release"/>
			  </enablement>
              <enablement 
              	type="CONTAINER_ATTRIBUTE" 
              	attribute="value" 
              	value="ghs.c.debugging.level.max"
              	extensionAdjustment="false">
			  	<checkBuildProperty 
			  		property="org.eclipse.cdt.build.core.buildType"
			  		value="org.eclipse.cdt.build.core.buildType.debug"/>
			  </enablement>
		  
		  </option>
		  <option
			  name="%Option.Posix.Debug.Other"
			  category="ghs.c.compiler.category.debug"
			  id="ghs.c.compiler.option.debugging.other"
			  valueType="string">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Debug.prof"
			  category="ghs.c.compiler.category.debug"
			  command="-p"
			  id="ghs.c.compiler.option.debugging.prof"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Debug.gprof"
			  category="ghs.c.compiler.category.debug"
			  command="-pg"
			  id="ghs.c.compiler.option.debugging.gprof"
			  valueType="boolean">
		  </option>
		  <option
			  category="ghs.c.compiler.category.debug"
			  command="-ftest-coverage -fprofile-arcs"
			  defaultValue="false"
			  id="ghs.c.compiler.option.debugging.codecov"
			  name="%Option.codecov"
			  tip="%Option.codecovTip"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.c.compiler"
			  name="%OptionCategory.Warn"
			  id="ghs.c.compiler.category.warnings">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.Syntax"
			  category="ghs.c.compiler.category.warnings"
			  command="-fsyntax-only"
			  id="ghs.c.compiler.option.warnings.syntax"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.Pedandic"
			  category="ghs.c.compiler.category.warnings"
			  command="-pedantic"
			  id="ghs.c.compiler.option.warnings.pedantic"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.PedErrors"
			  category="ghs.c.compiler.category.warnings"
			  command="-pedantic-errors"
			  id="ghs.c.compiler.option.warnings.pedantic.error"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.nowarn"
			  category="ghs.c.compiler.category.warnings"
			  command="-w"
			  id="ghs.c.compiler.option.warnings.nowarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="true"
			  name="%Option.Posix.Warn.allwarn"
			  category="ghs.c.compiler.category.warnings"
			  command="-Wall"
			  id="ghs.c.compiler.option.warnings.allwarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.extrawarn"
			  category="ghs.c.compiler.category.warnings"
			  command="-Wextra"
			  id="ghs.c.compiler.option.warnings.extrawarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.toerrs"
			  category="ghs.c.compiler.category.warnings"
			  command="-Werror"
			  id="ghs.c.compiler.option.warnings.toerrors"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.wconversion"
			  category="ghs.c.compiler.category.warnings"
			  command="-Wconversion"
			  id="ghs.c.compiler.option.warnings.wconversion"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.c.compiler"
			  name="%OptionCategory.Misc"
			  id="ghs.c.compiler.category.other">
		  </optionCategory>
		  <option
			  name="%Option.OtherFlags"
			  category="ghs.c.compiler.category.other"
			  id="ghs.c.compiler.option.misc.other"
			  valueType="string">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Verbose"
			  category="ghs.c.compiler.category.other"
			  command="-v"
			  id="ghs.c.compiler.option.misc.verbose"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Ansi"
			  category="ghs.c.compiler.category.other"
			  command="-ansi"
			  id="ghs.c.compiler.option.misc.ansi"
			  valueType="boolean">
		  </option>
		  <option
			  category="ghs.c.compiler.category.other"
			  command="-fPIC"
			  defaultValue="false"
			  id="ghs.c.compiler.option.misc.pic"
			  name="%Option.PIC"
			  valueType="boolean">
		  </option>
          <inputType
                dependencyCalculator="cdt.ghs.managedMake.GHSDependencyCalculator"
                dependencyContentType="org.eclipse.cdt.core.cHeader"
                dependencyExtensions="h"
                id="cdt.ghs.managedbuild.tool.c.compiler.input"
                languageId="org.eclipse.cdt.core.gcc"
                primaryInput="true"
                scannerConfigDiscoveryProfileId="GHSManagedMakePerProjectProfile"
                sourceContentType="org.eclipse.cdt.core.cSource"
                sources="c">
          </inputType>
          <outputType
                buildVariable="OBJS"
                id="cdt.ghs.managedbuild.tool.c.compiler.output"
                outputs="obj"
                primaryOutput="true">
          </outputType>
         </tool>
         <tool
               command="cxv850e"
               commandLineGenerator="cdt.ghs.managedMake.GHSCommandLineGenerator"
               commandLinePattern="${COMMAND} ${toolchain_flags} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}"
               errorParsers="org.eclipse.cdt.core.GCCErrorParser"
               id="cdt.ghs.managedbuild.tool.cpp.compiler"
               isAbstract="false"
               name="%tool.gpp.compiler"
               natureFilter="ccnature"
               outputFlag="-c -o">
                           <supportedProperties>
            <property id="org.eclipse.cdt.build.core.buildType">
	            <value id="org.eclipse.cdt.build.core.buildType.debug"/>
    	        <value id="org.eclipse.cdt.build.core.buildType.release"/>
            </property>
            </supportedProperties>
         <envVarBuildPath 
         	pathType="buildpathInclude"
         	variableList="CPATH,CPLUS_INCLUDE_PATH">
         </envVarBuildPath>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.cpp.compiler"
			  name="%OptionCategory.Dialect"
			  id="ghs.cpp.compiler.category.dialect">
		  </optionCategory>
		  <option
			  category="ghs.cpp.compiler.category.dialect"
			  defaultValue="false"
			  id="ghs.cpp.compiler.option.dialect.std"
			  name="%Option.Posix.Dialect"
			  useByScannerDiscovery="true"
			  valueType="enumerated">
			  <enumeratedOptionValue
					  name="%Option.Posix.Dialect.default"
					  command=""
					  id="ghs.cpp.compiler.dialect.default">
			  </enumeratedOptionValue>
			  <enumeratedOptionValue
					  name="%Option.Posix.Dialect.c++98"
					  command="-std=c++98"
					  id="ghs.cpp.compiler.dialect.c++98">
			  </enumeratedOptionValue>
			  <enumeratedOptionValue
					  name="%Option.Posix.Dialect.c++11"
					  command="-std=c++0x"
					  id="ghs.cpp.compiler.dialect.c++11">
			  </enumeratedOptionValue>
			  <enumeratedOptionValue
					  name="%Option.Posix.Dialect.c++1y"
					  command="-std=c++1y"
					  id="ghs.cpp.compiler.dialect.c++1y">
			  </enumeratedOptionValue>
		  </option>
		  <option
			  name="%Option.Posix.Dialect.Flags"
			  category="ghs.cpp.compiler.category.dialect"
			  id="ghs.cpp.compiler.option.dialect.flags"
			  useByScannerDiscovery="true"
			  valueType="string">
		  </option>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.cpp.compiler"
			  name="%OptionCategory.Preproc"
			  id="ghs.cpp.compiler.category.preprocessor">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Nostdinc"
			  category="ghs.cpp.compiler.category.preprocessor"
			  command="-nostdinc"
			  id="ghs.cpp.compiler.option.preprocessor.nostdinc"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.PreprocOnly"
			  category="ghs.cpp.compiler.category.preprocessor"
			  command="-E"
			  id="ghs.cpp.compiler.option.preprocessor.preprocess"
			  valueType="boolean">
		  </option>
		  <option
			  name="%Option.Posix.DefSym"
			  category="ghs.cpp.compiler.category.preprocessor"
			  command="-D"
			  id="ghs.cpp.compiler.option.preprocessor.def"
			  valueType="definedSymbols">
		  </option>
		  <option
			  name="%Option.Posix.UndefSym"
			  category="ghs.cpp.compiler.category.preprocessor"
			  command="-U"
			  id="ghs.cpp.compiler.option.preprocessor.undef"
			  valueType="undefDefinedSymbols">
		  </option>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.cpp.compiler"
			  name="%OptionCategory.Dirs"
			  id="ghs.cpp.compiler.category.dirs">
		  </optionCategory>
		  <option
			  name="%Option.Posix.InclPaths"
			  category="ghs.cpp.compiler.category.dirs"
			  command="-I"
			  id="ghs.cpp.compiler.option.include.paths"
			  valueType="includePath"
			  browseType="directory">
		  </option>
		  <option
	          browseType="file"
	          category="ghs.cpp.compiler.category.dirs"
	          command="-include"
	          id="ghs.cpp.compiler.option.include.files"
	          name="%Option.Posix.InclFiles"
	          valueType="includeFiles">
		  </option>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.cpp.compiler"
			  name="%OptionCategory.Optimize"
			  id="ghs.cpp.compiler.category.optimization">
		  </optionCategory>
		  <option
			  name="%Option.Posix.OptLevel"
			  category="ghs.cpp.compiler.category.optimization"
			  id="ghs.cpp.compiler.option.optimization.level"
			  valueType="enumerated">
		  <enumeratedOptionValue
				  name="%Option.Posix.Optimize.Default"
				  id="ghs.cpp.compiler.optimization.level.default">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="%Option.Posix.Optimize.None"
				  command="-O0"
				  id="ghs.cpp.compiler.optimization.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="%Option.Posix.Optimize.Speed"
				  command="-Ospeed"
				  id="ghs.cpp.compiler.optimization.level.speed">
		  </enumeratedOptionValue>
          <enumeratedOptionValue
                  command="-Osize"
                  id="ghs.cpp.compiler.optimization.level.size"
                  name="%Option.Posix.Optimize.Size">
          </enumeratedOptionValue>
		      <enablement 
              	type="CONTAINER_ATTRIBUTE" 
              	attribute="value" 
              	value="ghs.cpp.compiler.optimization.level.speed"
              	extensionAdjustment="false">
			  	<checkBuildProperty 
			  		property="org.eclipse.cdt.build.core.buildType"
			  		value="org.eclipse.cdt.build.core.buildType.release"/>
			  </enablement>
              <enablement 
              	type="CONTAINER_ATTRIBUTE" 
              	attribute="value" 
              	value="ghs.cpp.compiler.optimization.level.none"
              	extensionAdjustment="false">
			  	<checkBuildProperty 
			  		property="org.eclipse.cdt.build.core.buildType"
			  		value="org.eclipse.cdt.build.core.buildType.debug"/>
			  </enablement>		  
		  </option>
		  <option
			  name="%Option.Posix.Optimize.Flags"
			  category="ghs.cpp.compiler.category.optimization"
			  id="ghs.cpp.compiler.option.optimization.flags"
			  valueType="string">
		  </option>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.cpp.compiler"
			  name="%OptionCategory.Debug"
			  id="ghs.cpp.compiler.category.debug">
		  </optionCategory>
		  <option
			  name="%Option.Posix.DebugLevel"
			  category="ghs.cpp.compiler.category.debug"
			  id="ghs.cpp.compiler.option.debugging.level"
			  valueType="enumerated">
		  <enumeratedOptionValue
				  name="%Option.Posix.Debug.None"
				  isDefault="false"
				  id="ghs.cpp.compiler.debugging.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="%Option.Posix.Debug.Min"
				  command="-g"
				  id="ghs.cpp.compiler.debugging.level.minimal">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="%Option.Posix.Debug.Def"
				  isDefault="true"
				  command="--no-debug"
				  id="ghs.cpp.compiler.debugging.level.default">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="%Option.Posix.Debug.Max"
				  isDefault="false"
				  command="-G"
				  id="ghs.cpp.compiler.debugging.level.max">
		  </enumeratedOptionValue>
		  	 <enablement 
              	type="CONTAINER_ATTRIBUTE" 
              	attribute="value" 
              	value="ghs.cpp.compiler.debugging.level.none"
              	extensionAdjustment="false">
			  	<checkBuildProperty 
			  		property="org.eclipse.cdt.build.core.buildType"
			  		value="org.eclipse.cdt.build.core.buildType.release"/>
			  </enablement>
              <enablement 
              	type="CONTAINER_ATTRIBUTE" 
              	attribute="value" 
              	value="ghs.cpp.compiler.debugging.level.max"
              	extensionAdjustment="false">
			  	<checkBuildProperty 
			  		property="org.eclipse.cdt.build.core.buildType"
			  		value="org.eclipse.cdt.build.core.buildType.debug"/>
			  </enablement>		  
		  
		  </option>
		  <option
			  name="%Option.Posix.Debug.Other"
			  category="ghs.cpp.compiler.category.debug"
			  id="ghs.cpp.compiler.option.debugging.other"
			  valueType="string">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Debug.prof"
			  category="ghs.cpp.compiler.category.debug"
			  command="-p"
			  id="ghs.cpp.compiler.option.debugging.prof"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Debug.gprof"
			  category="ghs.cpp.compiler.category.debug"
			  command="-pg"
			  id="ghs.cpp.compiler.option.debugging.gprof"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.codecov"
			  category="ghs.cpp.compiler.category.debug"
			  command="-ftest-coverage -fprofile-arcs"
			  id="ghs.cpp.compiler.option.debugging.codecov"
			  tip="%Option.codecovTip"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.cpp.compiler"
			  name="%OptionCategory.Warn"
			  id="ghs.cpp.compiler.category.warnings">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.Syntax"
			  category="ghs.cpp.compiler.category.warnings"
			  command="-fsyntax-only"
			  id="ghs.cpp.compiler.option.warnings.syntax"
			  valueType="boolean">
		   </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.Pedandic"
			  category="ghs.cpp.compiler.category.warnings"
			  command="-pedantic"
			  id="ghs.cpp.compiler.option.warnings.pedantic"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.PedErrors"
			  category="ghs.cpp.compiler.category.warnings"
			  command="-pedantic-errors"
			  id="ghs.cpp.compiler.option.warnings.pedantic.error"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.nowarn"
			  category="ghs.cpp.compiler.category.warnings"
			  command="-w"
			  id="ghs.cpp.compiler.option.warnings.nowarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="true"
			  name="%Option.Posix.Warn.allwarn"
			  category="ghs.cpp.compiler.category.warnings"
			  command="-Wall"
			  id="ghs.cpp.compiler.option.warnings.allwarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.extrawarn"
			  category="ghs.cpp.compiler.category.warnings"
			  command="-Wextra"
			  id="ghs.cpp.compiler.option.warnings.extrawarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.toerrs"
			  category="ghs.cpp.compiler.category.warnings"
			  command="-Werror"
			  id="ghs.cpp.compiler.option.warnings.toerrors"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Warn.wconversion"
			  category="ghs.cpp.compiler.category.warnings"
			  command="-Wconversion"
			  id="ghs.cpp.compiler.option.warnings.wconversion"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.ghs.managedbuild.tool.cpp.compiler"
			  name="%OptionCategory.Misc"
			  id="ghs.cpp.compiler.category.other">
		  </optionCategory>
		  <option
			  name="%Option.OtherFlags"
			  category="ghs.cpp.compiler.category.other"
			  id="ghs.cpp.compiler.option.other.other"
			  valueType="string">
		  </option>
		  <option
			  defaultValue="false"
			  name="%Option.Posix.Verbose"
			  category="ghs.cpp.compiler.category.other"
			  command="-v"
			  id="ghs.cpp.compiler.option.other.verbose"
			  valueType="boolean">
		  </option>
		  <option
			  category="ghs.cpp.compiler.category.other"
			  command="-fPIC"
			  defaultValue="false"
			  id="ghs.cpp.compiler.option.other.pic"
			  name="%Option.PIC"
			  valueType="boolean">
		  </option>
          <inputType
                dependencyCalculator="cdt.ghs.managedMake.GHSDependencyCalculator"
                dependencyContentType="org.eclipse.cdt.core.cxxHeader"
                dependencyExtensions="h,H,hpp,hh,hp,hxx,HPP,h++,tcc"
                id="cdt.ghs.managedbuild.tool.cpp.compiler.input"
                languageId="org.eclipse.cdt.core.g++"
                scannerConfigDiscoveryProfileId="GHSManagedMakePerProjectProfileCPP"
                sourceContentType="org.eclipse.cdt.core.cxxSource"
                sources="c,C,cc,cxx,cpp,cp,CPP">
          </inputType>
          <outputType
                buildVariable="OBJS"
                id="cdt.ghs.managedbuild.tool.cpp.compiler.output"
                outputs="obj">
          </outputType>
         </tool>
         <tool
               command="ccv850e"
               commandLineGenerator="cdt.ghs.managedMake.GHSCommandLineGenerator"
               commandLinePattern="${COMMAND} ${toolchain_flags} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}"
               errorParsers="cdt.ghs.managedMake.GHSCompilerErrorParser"
               id="cdt.ghs.managedbuild.tool.c.linker"
               isAbstract="false"
               name="%tool.gcc.linker"
               natureFilter="cnature"
               outputFlag="-o">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
            <supportedProperties>
            <property id="org.eclipse.cdt.build.core.buildArtefactType">
	            <value id="org.eclipse.cdt.build.core.buildArtefactType.exe"/>
    	        <value id="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"/>
            </property>
            </supportedProperties>
                     <envVarBuildPath 
         	pathType="buildpathLibrary"
         	variableList="LIBRARY_PATH">
         </envVarBuildPath>
         
         <optionCategory
               owner="cdt.ghs.managedbuild.tool.c.linker"
               name="%OptionCategory.General"
               id="ghs.c.link.category.general">
         </optionCategory>
         <option
               defaultValue="false"
               name="%Option.Posix.Linker.NoStartFiles"
               category="ghs.c.link.category.general"
               command="-nostartfiles"
               id="ghs.c.link.option.nostart"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="%Option.Posix.Linker.NoDefLibs"
               category="ghs.c.link.category.general"
               command="-nodefaultlibs"
               id="ghs.c.link.option.nodeflibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="%Option.Posix.Linker.NoStdLibs"
               category="ghs.c.link.category.general"
               command="-nostdlib"
               id="ghs.c.link.option.nostdlibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="%Option.Posix.Linker.Strip"
               category="ghs.c.link.category.general"
               command="-s"
               id="ghs.c.link.option.strip"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="%Option.Posix.Linker.Static"
               category="ghs.c.link.category.general"
               command="-static"
               id="ghs.c.link.option.noshared"
               valueType="boolean">
         </option>
         <optionCategory
               owner="cdt.ghs.managedbuild.tool.c.linker"
               name="%OptionCategory.Libs"
               id="ghs.c.link.category.libs">
         </optionCategory>
         <option
               name="%Option.Posix.Libs"
               category="ghs.c.link.category.libs"
               command="-l"
               id="ghs.c.link.option.libs"
               browseType="none"
               valueType="libs">
         </option>
         <option
               name="%Option.Posix.Libsearch"
               category="ghs.c.link.category.libs"
               command="-L"
               id="ghs.c.link.option.paths"
               browseType="directory"
               valueType="libPaths">
         </option>
         <optionCategory
               owner="cdt.ghs.managedbuild.tool.c.linker"
               name="%OptionCategory.Misc"
               id="ghs.c.link.category.other">
         </optionCategory>
         <option
               name="%Option.Posix.Linker.Flags"
               category="ghs.c.link.category.other"
               valueType="string"
               id="ghs.c.link.option.ldflags">
         </option>
         <option
               name="%Option.Posix.Linker.XLinker"
               category="ghs.c.link.category.other"
               command="-Xlinker ${VALUE}"
               valueType="stringList"
               id="ghs.c.link.option.other">
         </option>
         <option
               name="%Option.Posix.UserObjs"
               category="ghs.c.link.category.other"
               browseType="file"
               valueType="userObjs"
               id="ghs.c.link.option.userobjs">
         </option>
         <optionCategory
               owner="cdt.ghs.managedbuild.tool.c.linker"
               name="%OptionCategory.Shared.Settings"
               id="ghs.c.link.category.shared">
         </optionCategory>
         <option
               defaultValue="false"
               name="%Option.Posix.Linker.Shared"
               category="ghs.c.link.category.shared"
               command="-shared"
               id="ghs.c.link.option.shared"
               valueType="boolean">
              <enablement 
              	type="CONTAINER_ATTRIBUTE" 
              	attribute="defaultValue" 
              	value="true"
              	extensionAdjustment="false">
			  	<checkBuildProperty 
			  		property="org.eclipse.cdt.build.core.buildArtefactType"
			  		value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"/>
			  </enablement>
         </option>
         <option
               name="%Option.Posix.Linker.SOName"
               category="ghs.c.link.category.shared"
               command="-Wl,-soname="
               id="ghs.c.link.option.soname"
               valueType="string">
         </option>
         <option
               name="%Option.Posix.Linker.Implib"
               category="ghs.c.link.category.shared"
               command="-Wl,--out-implib="
               id="ghs.c.link.option.implname"
               valueType="string">
         </option>
         <option
               name="%Option.Posix.Linker.Defname"
               category="ghs.c.link.category.shared"
               command="-Wl,--output-def="
               id="ghs.c.link.option.defname"
               valueType="string">
         </option>
         <inputType
            sourceContentType="org.eclipse.cdt.managedbuilder.core.compiledObjectFile"
            sources="o"
			multipleOfType="true"
            dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.internal.DefaultNoDependencyCalculator"
            buildVariable="OBJS"
            id="cdt.ghs.managedbuild.tool.c.linker.input">
            <additionalInput
            	paths="$(USER_OBJS)"
            	kind="additionalinputdependency">
            </additionalInput>
            <additionalInput
            	paths="$(LIBS)"
            	kind="additionalinput">
            </additionalInput>
         </inputType>
         <outputType
			outputs=""
            buildVariable="EXECUTABLES"
            nameProvider="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuLinkOutputNameProvider"
            id="cdt.ghs.managedbuild.tool.c.linker.output">
             <enablement 
              	type="ALL">
			  	<checkOption 
			  		optionId="ghs.c.link.option.shared"
			  		value="false"/>
			  </enablement>
         </outputType>
         <outputType
		    outputs="so"
			outputPrefix="lib"
            nameProvider="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuLinkOutputNameProvider"
			buildVariable="LIBRARIES"
			id="cdt.ghs.managedbuild.tool.c.linker.output.so">
             <enablement 
              	type="ALL">
			  	<checkOption 
			  		optionId="ghs.c.link.option.shared"
			  		value="true"/>
			  </enablement>
		 </outputType>
         <option
               applicabilityCalculator="org.eclipse.cdt.managedbuilder.gnu.ui.ProfAppCalculator"
               command="-p"
               defaultValue="false"
               id="ghs.c.link.option.debugging.prof"
               name="%Option.Posix.Debug.prof"
               valueType="boolean">
         </option>
         <option
               applicabilityCalculator="org.eclipse.cdt.managedbuilder.gnu.ui.GprofAppCalculator"
               command="-pg"
               defaultValue="false"
               id="ghs.c.link.option.debugging.gprof"
               name="%Option.Posix.Debug.gprof"
               valueType="boolean">
         </option>
         <option
			  applicabilityCalculator="org.eclipse.cdt.managedbuilder.gnu.ui.GcovAppCalculator"
			  command="-ftest-coverage -fprofile-arcs"
			  defaultValue="false"
			  id="ghs.c.link.option.debugging.codecov"
			  name="%Option.codecov"
			  valueType="boolean">
		  </option>
         </tool>
         <tool
               command="cxv850e"
               commandLineGenerator="cdt.ghs.managedMake.GHSCommandLineGenerator"
               commandLinePattern="${COMMAND} ${toolchain_flags} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}"
               errorParsers="cdt.ghs.managedMake.GHSCompilerErrorParser"
               id="cdt.ghs.managedbuild.tool.cpp.linker"
               isAbstract="false"
               name="%tool.gpp.linker"
               natureFilter="ccnature"
               outputFlag="-o">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
            <supportedProperties>
            <property id="org.eclipse.cdt.build.core.buildArtefactType">
	            <value id="org.eclipse.cdt.build.core.buildArtefactType.exe"/>
    	        <value id="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"/>
            </property>
            </supportedProperties>
         <envVarBuildPath 
         	pathType="buildpathLibrary"
         	variableList="LIBRARY_PATH">
         </envVarBuildPath>
         <optionCategory
               owner="cdt.ghs.managedbuild.tool.cpp.linker"
               name="%OptionCategory.General"
               id="ghs.cpp.link.category.options">
         </optionCategory>
         <option
               defaultValue="false"
               name="%Option.Posix.Linker.NoStartFiles"
               category="ghs.cpp.link.category.options"
               command="-nostartfiles"
               id="ghs.cpp.link.option.nostart"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="%Option.Posix.Linker.NoDefLibs"
               category="ghs.cpp.link.category.options"
               command="-nodefaultlibs"
               id="ghs.cpp.link.option.nodeflibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="%Option.Posix.Linker.NoStdLibs"
               category="ghs.cpp.link.category.options"
               command="-nostdlib"
               id="ghs.cpp.link.option.nostdlibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="%Option.Posix.Linker.Strip"
               category="ghs.cpp.link.category.options"
               command="-s"
               id="ghs.cpp.link.option.strip"
               valueType="boolean">
         </option>
         <optionCategory
               owner="cdt.ghs.managedbuild.tool.cpp.linker"
               name="%OptionCategory.Libs"
               id="ghs.cpp.link.category.libs">
         </optionCategory>
         <option
               name="%Option.Posix.Libs"
               category="ghs.cpp.link.category.libs"
               command="-l"
               id="ghs.cpp.link.option.libs"
               browseType="none"
               valueType="libs">
         </option>
         <option
               name="%Option.Posix.Libsearch"
               category="ghs.cpp.link.category.libs"
               command="-L"
               id="ghs.cpp.link.option.paths"
               browseType="directory"
               valueType="libPaths">
         </option>
         <optionCategory
               owner="cdt.ghs.managedbuild.tool.cpp.linker"
               name="%OptionCategory.Misc"
               id="ghs.cpp.link.category.other">
         </optionCategory>
         <option
               name="%Option.Posix.Linker.Flags"
               category="ghs.cpp.link.category.other"
               valueType="string"
               id="ghs.cpp.link.option.flags">
         </option>
         <option
               name="%Option.Posix.Linker.XLinker"
               category="ghs.cpp.link.category.other"
               command="-Xlinker ${VALUE}"
               valueType="stringList"
               id="ghs.cpp.link.option.other">
         </option>
         <option
               name="%Option.Posix.UserObjs"
               category="ghs.cpp.link.category.other"
               browseType="file"
               valueType="userObjs"
               id="ghs.cpp.link.option.userobjs">
         </option>
         <optionCategory
               owner="cdt.ghs.managedbuild.tool.cpp.linker"
               name="%OptionCategory.Shared.Settings"
               id="ghs.cpp.link.category.shared">
         </optionCategory>
         <option
               defaultValue="false"
               name="%Option.Posix.Linker.Shared"
               category="ghs.cpp.link.category.shared"
               command="-shared"
               valueType="boolean"
               id="ghs.cpp.link.option.shared">
               <enablement 
              	type="CONTAINER_ATTRIBUTE" 
              	attribute="defaultValue" 
              	value="true"
              	extensionAdjustment="false">
			  	<checkBuildProperty 
			  		property="org.eclipse.cdt.build.core.buildArtefactType"
			  		value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"/>
			  </enablement>
         </option>
         <option
               name="%Option.Posix.Linker.SOName"
               category="ghs.cpp.link.category.shared"
               command="-Wl,-soname="
               valueType="string"
               id="ghs.cpp.link.option.soname">
         </option>
         <option
               name="%Option.Posix.Linker.Implib"
               category="ghs.cpp.link.category.shared"
               command="-Wl,--out-implib="
               valueType="string"
               id="ghs.cpp.link.option.implname">
         </option>
         <option
               name="%Option.Posix.Linker.Defname"
               category="ghs.cpp.link.category.shared"
               command="-Wl,--output-def="
               valueType="string"
               id="ghs.cpp.link.option.defname">
         </option>
         <inputType
            sourceContentType="org.eclipse.cdt.managedbuilder.core.compiledObjectFile"
            sources="o"
			multipleOfType="true"
            dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.internal.DefaultNoDependencyCalculator"
            buildVariable="OBJS"
            id="cdt.ghs.managedbuild.tool.cpp.linker.input">
            <additionalInput
            	paths="$(USER_OBJS)"
            	kind="additionalinputdependency">
            </additionalInput>
            <additionalInput
            	paths="$(LIBS)"
            	kind="additionalinput">
            </additionalInput>
         </inputType>
         <outputType
			outputs=""
            buildVariable="EXECUTABLES"
            nameProvider="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuLinkOutputNameProvider"
            id="cdt.ghs.managedbuild.tool.cpp.linker.output">
              <enablement 
              	type="ALL">
			  	<checkOption 
			  		optionId="ghs.cpp.link.option.shared"
			  		value="false"/>
			  </enablement>
         </outputType>
         <outputType
			  outputs="so"
			  outputPrefix="lib"
            nameProvider="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuLinkOutputNameProvider"
	          buildVariable="LIBRARIES"
              id="cdt.ghs.managedbuild.tool.cpp.linker.output.so">
              <enablement 
              	type="ALL">
			  	<checkOption 
			  		optionId="ghs.cpp.link.option.shared"
			  		value="true"/>
			  </enablement>
         </outputType>
         <option
               applicabilityCalculator="org.eclipse.cdt.managedbuilder.gnu.ui.ProfAppCalculator"
               command="-p"
               defaultValue="false"
               id="ghs.cpp.link.option.debugging.prof"
               name="%Option.Posix.Debug.prof"
               valueType="boolean">
         </option>
         <option
               applicabilityCalculator="org.eclipse.cdt.managedbuilder.gnu.ui.GprofAppCalculator"
               command="-pg"
               defaultValue="false"
               id="ghs.cpp.link.option.debugging.gprof"
               name="%Option.Posix.Debug.gprof"
               valueType="boolean">
         </option>
         <option
			  applicabilityCalculator="org.eclipse.cdt.managedbuilder.gnu.ui.GcovAppCalculator"
			  command="-ftest-coverage -fprofile-arcs"
			  defaultValue="false"
			  id="ghs.cpp.link.option.debugging.codecov"
			  name="%Option.codecov"
			  valueType="boolean">
		  </option>
         </tool>
         <tool
               command="ax"
               commandLineGenerator="cdt.ghs.managedMake.GHSCommandLineGenerator"
               id="cdt.ghs.managedbuild.tool.archiver"
               isAbstract="false"
               name="%tool.gcc.archiver"
               natureFilter="both">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </checkBuildProperty>
            </enablement>
                        <supportedProperties>
            <property id="org.eclipse.cdt.build.core.buildArtefactType">
    	        <value id="org.eclipse.cdt.build.core.buildArtefactType.staticLib"/>
            </property>
            </supportedProperties>
         <optionCategory
               owner="cdt.ghs.managedbuild.tool.archiver"
               name="%OptionCategory.General"
               id="ghs.lib.category.general">
         </optionCategory>
         <option
               defaultValue="-r"
               name="%Option.Posix.Archiver.Flags"
               category="ghs.lib.category.general"
               valueType="string"
               id="ghs.both.lib.option.flags">
         </option>
         <inputType
            sourceContentType="org.eclipse.cdt.managedbuilder.core.compiledObjectFile"
            sources="o"
			multipleOfType="true"
            dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.internal.DefaultNoDependencyCalculator"
            buildVariable="OBJS"
            id="cdt.ghs.managedbuild.tool.archiver.input">
            <additionalInput
            	paths="$(USER_OBJS)"
            	kind="additionalinputdependency">
            </additionalInput>
            <additionalInput
            	paths="$(LIBS)"
            	kind="additionalinput">
            </additionalInput>
         </inputType>
         <outputType
			outputs="a"
            outputPrefix="lib"
            buildVariable="ARCHIVES"
            nameProvider="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuLinkOutputNameProvider"
            id="cdt.ghs.managedbuild.tool.archiver.output">
         </outputType>
         </tool>
         <tool
               command="as850"
               commandLineGenerator="cdt.ghs.managedMake.GHSCommandLineGenerator"
               commandLinePattern="${COMMAND} ${toolchain_flags} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}"
               errorParsers="org.eclipse.cdt.core.GASErrorParser"
               id="cdt.ghs.managedbuild.tool.assembler"
               isAbstract="false"
               name="%tool.gcc.assembler"
               natureFilter="both"
               outputFlag="-o">
         <optionCategory
               owner="cdt.ghs.managedbuild.tool.assembler"
               name="%OptionCategory.General"
               id="ghs.asm.category.general">
         </optionCategory>
         <option
               name="%Option.Gnu.Assembler.Flags"
               category="ghs.asm.category.general"
               valueType="string"
               id="ghs.both.asm.option.flags">
         </option>
         <option
               command="-I"
               valueType="includePath"
               category="ghs.asm.category.general"
               browseType="directory"
               name="%Option.Posix.InclPaths"
               id="ghs.both.asm.option.include.paths"/>
         <option
               command="-W"
               defaultValue="false"
               valueType="boolean"
               category="ghs.asm.category.general"
               name="%Option.Gnu.Assembler.warn.suppress"
               id="ghs.both.asm.option.warnings.nowarn"/>
         <option
               command="-v"
               defaultValue="false"
               valueType="boolean"
               category="ghs.asm.category.general"
               name="%Option.Gnu.Assembler.version"
               id="ghs.both.asm.option.version"/>
         <inputType
               id="cdt.ghs.managedbuild.tool.assembler.input"
               languageId="org.eclipse.cdt.core.assembly"
               sourceContentType="org.eclipse.cdt.core.asmSource"
               sources="s,S">
         </inputType>
         <outputType
			outputs="o"
            buildVariable="OBJS"
            id="cdt.ghs.managedbuild.tool.assembler.output">
         </outputType>
         </tool>
      </toolChain>
	     <projectType
	        buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
	        id="cdt.ghs.managedbuild.target.exe"
	        isAbstract="false"
	        isTest="false"
	        >                                  
	     <configuration
	           name="Debug"
	           cleanCommand="rm -rf"
	           id="cdt.ghs.managedbuild.config.exe.debug"
	           parent="cdt.managedbuild.config.gnu.base"
	           buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug">
	           <toolChain
	           		 superClass="cdt.ghs.managedbuild.toolchain.base"
	                 id="cdt.ghs.managedbuild.toolchain.exe.debug">
	           </toolChain>                                   
	     </configuration>
	     <configuration
	           name="Release"
	           cleanCommand="rm -rf"
	           id="cdt.ghs.managedbuild.config.exe.release"
	           parent="cdt.managedbuild.config.gnu.base"
	           buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release">
	           <toolChain
	                 superClass="cdt.ghs.managedbuild.toolchain.base"
	                 id="cdt.ghs.managedbuild.toolchain.exe.release">
	           </toolChain>                                                     
	     </configuration>
	  </projectType>              
	     
	  <projectType
	        buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
	        id="cdt.ghs.managedbuild.target.so"
	        isAbstract="false"
	        isTest="false"
	        >            
	     <configuration
	           name="Debug"
	           cleanCommand="rm -rf"
	           parent="cdt.managedbuild.config.gnu.base"
	           buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
	           id="cdt.ghs.managedbuild.config.so.debug">
	           <toolChain
	                 superClass="cdt.ghs.managedbuild.toolchain.base"
	                 id="cdt.ghs.managedbuild.toolchain.so.debug">
	           </toolChain>                                                     
	     </configuration>
	     <configuration
	           name="Release"
	           cleanCommand="rm -rf"
	           parent="cdt.managedbuild.config.gnu.base"
	           buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
	           id="cdt.ghs.managedbuild.config.so.release">               
	           <toolChain
	                 superClass="cdt.ghs.managedbuild.toolchain.base"
	                 id="cdt.ghs.managedbuild.toolchain.so.release">
	           </toolChain>                                                                                
	     </configuration>
	  </projectType>
	                   
	  <projectType
	        buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
	        id="cdt.ghs.managedbuild.target.lib"
	        isAbstract="false"
	        isTest="false"
	        >            
	     <configuration
	           name="Debug"
	           parent="cdt.managedbuild.config.gnu.base"
	           buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
	           cleanCommand="rm -rf"
	           id="cdt.ghs.managedbuild.config.lib.debug">
	           <toolChain
	                 superClass="cdt.managedbuild.toolchain.gnu.cross.base"
	                 id="cdt.ghs.managedbuild.toolchain.lib.debug">
	           </toolChain>                                                                                				               				  
	     </configuration>
	     <configuration
	           name="Release"
	           parent="cdt.managedbuild.config.gnu.base"
	           buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
	           cleanCommand="rm -rf"
	           id="cdt.ghs.managedbuild.config.lib.release">
	           <toolChain
	                 superClass="cdt.ghs.managedbuild.toolchain.base"
	                 id="cdt.ghs.managedbuild.toolchain.lib.release">
			</toolChain>                                                                                				                    
         </configuration>         
      </projectType>
   </extension>
   <extension
         point="org.eclipse.cdt.core.templateAssociations">
      <template
            id="org.eclipse.cdt.build.core.templates.HelloWorldCAnsiProject">
         <toolChain
               id="cdt.ghs.managedbuild.toolchain.base">
         </toolChain>
      </template>
      <template
            id="org.eclipse.cdt.build.core.templates.HelloWorldCCProject">
         <toolChain
               id="cdt.ghs.managedbuild.toolchain.base">
         </toolChain>
      </template>
   </extension>
   <extension
         point="org.eclipse.cdt.managedbuilder.ui.newWizardPages">
      <wizardPage
            ID="cdt.build.ghs.setGHSCommandWizardPage"
            operationClass="cdt.ghs.managedMake.SetGHSCommandOperation"
            pageClass="cdt.ghs.managedMake.SetGHSCommandWizardPage">
         <toolchain
               toolchainID="cdt.ghs.managedbuild.toolchain.exe.debug">
         </toolchain>
         <toolchain
               toolchainID="cdt.ghs.managedbuild.toolchain.exe.release">
         </toolchain>
         <toolchain
               toolchainID="cdt.ghs.managedbuild.toolchain.so.debug">
         </toolchain>
         <toolchain
               toolchainID="cdt.ghs.managedbuild.toolchain.so.release">
         </toolchain>
         <toolchain
               toolchainID="cdt.ghs.managedbuild.toolchain.lib.debug">
         </toolchain>
         <toolchain
               toolchainID="cdt.ghs.managedbuild.toolchain.lib.release">
         </toolchain>
      </wizardPage>
   </extension>
   <extension
         point="org.eclipse.cdt.core.LanguageSettingsProvider">
      <provider
            class="cdt.ghs.managedMake.GHSBuiltinSpecsDetector"
            id="cdt.ghs.build.GHSBuiltinSpecsDetector"
            name="%CrossGCCBuiltinSpecsDetector.name"
            parameter="${COMMAND} ${FLAGS} -E -v &quot;${INPUTS}&quot;"
            prefer-non-shared="true">
         <language-scope id="org.eclipse.cdt.core.gcc"/>
         <language-scope id="org.eclipse.cdt.core.g++"/>
      </provider>
   </extension>
   <extension
         id="GHSErrorParser"
         name="GHS C/C++ Error Parser"
         point="org.eclipse.cdt.core.ErrorParser">
      <errorparser
            class="cdt.ghs.managedMake.GHSCompilerErrorParser"
            id="cdt.ghs.managedMake.GHSCompilerErrorParser"
            name="GHS Compiler, Linker Error Parser">
      </errorparser>
   </extension>
   
      <!-- -->
   <!-- Xl C ScannerConfigurationDiscoveryProfile definitions -->
   <!-- -->

   <!-- We have to extend the core of CDT's make so that we can define a new ScannerConfigurationDiscoveryProfile -->
   <!-- A ScannerConfigurationDiscoveryProfile is used to discover information about the standard options used by the compiler, e.g. the standard include directories -->

   <!-- Xl C Managed Make Per Project Profile -->
   <!-- The Profile gathers together information about the standard include directories and standard definitions used by the compiler -->
   <extension
         id="GHSManagedMakePerProjectProfile"
         name="%profileName"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">

      <!-- The ScannerInfoCollector manages the information generated by the Profile so that it can be easily accessed afterwards -->
      <scannerInfoCollector
            class="cdt.ghs.managedMake.scannerConfig.PerFileGHSScannerInfoCollector"
            scope="project">
      </scannerInfoCollector>

      <!-- The ScannerInfoProvider search for the information needed by the profile and send it to the ScannerInfoCollector -->
      <scannerInfoProvider providerId="specsFile">
         <!-- Specifies the compiler command that returns the information about standard include directories and standard definitions -->
         <!-- The compiler command used will be always a C compiler command -->
         <!-- The output for C or C++ projects will be different as the ScannerInfoProvider substitute the ${specs_file} variable below with a dummy "c" file or "cpp" file -->
         <run
               arguments="-E -v &quot;${plugin_state_location}/${specs_file}&quot;"
               command="${XL_compilerRoot}/xlc"
               class="cdt.ghs.managedMake.scannerConfig..GHSSpecsRunSIProvider">
         </run>
         <!-- Specifies the parser for the output generated by the compiler with the above command line -->
         <scannerInfoConsoleParser
               class="cdt.ghs.managedMake.scannerConfig.GHSSpecsConsoleParser">
         </scannerInfoConsoleParser>
      </scannerInfoProvider>

   </extension>
   <!-- -->
   <!-- Xl C ScannerConfigurationDiscoveryProfile definitions -->
   <!-- -->

   <!-- We have to extend the core of CDT's make so that we can define a new ScannerConfigurationDiscoveryProfile -->
   <!-- A ScannerConfigurationDiscoveryProfile is used to discover information about the standard options used by the compiler, e.g. the standard include directories -->

   <!-- Xl C Managed Make Per Project Profile -->
   <!-- The Profile gathers together information about the standard include directories and standard definitions used by the compiler -->
   <extension
         id="GHSManagedMakePerProjectProfileCPP"
         name="%profileNameCPP"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">

      <!-- The ScannerInfoCollector manages the information generated by the Profile so that it can be easily accessed afterwards -->
      <scannerInfoCollector
            class="cdt.ghs.managedMake.scannerConfig.PerFileGHSScannerInfoCollector"
            scope="project">
      </scannerInfoCollector>

      <!-- The ScannerInfoProvider search for the information needed by the profile and send it to the ScannerInfoCollector -->
      <scannerInfoProvider providerId="specsFile">
         <!-- Specifies the compiler command that returns the information about standard include directories and standard definitions -->
         <!-- The compiler command used will be always a C compiler command -->
         <!-- The output for C or C++ projects will be different as the ScannerInfoProvider substitute the ${specs_file} variable below with a dummy "c" file or "cpp" file -->
         <run
               arguments="-E -v &quot;${plugin_state_location}/${specs_file}&quot;"
               command="${COMMAND}"
               class="cdt.ghs.managedMake.scannerConfig.GHSSpecsRunSIProvider">
         </run>
         <!-- Specifies the parser for the output generated by the compiler with the above command line -->
         <scannerInfoConsoleParser
               class="cdt.ghs.managedMake.scannerConfig..GHSSpecsConsoleParser">
         </scannerInfoConsoleParser>
      </scannerInfoProvider>
   </extension>
</plugin>
